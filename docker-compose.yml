services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - PORT=8080
      - app.init.db=false
      - SPRING_PROFILES_ACTIVE=default 
    depends_on:
      postgres:
        condition: service_healthy

  app2:
    build:
        context: .
        dockerfile: Dockerfile
    ports:
        - "8082:8080"
    environment:
        - PORT=8080
        - app.init.db=false
        - SPRING_PROFILES_ACTIVE=default 
    depends_on:
      postgres:
        condition: service_healthy

  app3:
      build:
          context: .
          dockerfile: Dockerfile
      ports:
          - "8083:8080"
      environment:
          - PORT=8080
          - app.init.db=false
          - SPRING_PROFILES_ACTIVE=default 
      depends_on:
        postgres:
          condition: service_healthy
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app1
      - app2
      - app3
  postgres:
      image: postgres:latest
      ports:
        - "5433:5432"
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=password
        - POSTGRES_DB=mareo_envios_db
        - app.init.db=true
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./src/main/resources:/docker-entrypoint-initdb.d
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
volumes:
   postgres_data: